@model ScheduleHelper.Models.DbModels.Teacher

@{
    ViewData["Title"] = "Детали";
}

<div>
    <h4>Преподаватель</h4>
    <div>
        <a asp-action="Edit" asp-route-id="@Model.Id">Редактировать</a>
        <br />
        @if (Model.ScheduleItems.Count != 0)
        {
            <h6>Нельзя удалить преподавателя, пока имеются занятия связанные с ним</h6>
        }
        else
        {
            <a asp-action="Delete" asp-route-id="@Model.Id">Удалить</a>
        }      
    </div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Comment)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Comment)
        </dd>
    </dl>
</div>

<table class="table">
    <thead>
        <tr>
            <th>
                Язык
            </th>
            <th>
                Уровень
            </th>
            <th>
                Вид занятий
            </th> 
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ScheduleItems)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Language.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Language.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
            </tr>
        }
    </tbody>
</table>
