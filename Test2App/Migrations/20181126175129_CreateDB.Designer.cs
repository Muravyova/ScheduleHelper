// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using ScheduleHelper.Data;

namespace ScheduleHelper.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181126175129_CreateDB")]
    partial class CreateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ScheduleHelper.Models.DbModels.History", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("ScheduleItemId");

                    b.Property<Guid>("StudentId");

                    b.Property<string>("Time")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ScheduleItemId");

                    b.HasIndex("StudentId");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("ScheduleHelper.Models.DbModels.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("ScheduleHelper.Models.DbModels.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<DateTime>("Date");

                    b.Property<double>("Pay");

                    b.Property<bool>("Refund");

                    b.Property<double>("RefundPay");

                    b.Property<Guid>("ScheduleItemId");

                    b.Property<Guid>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleItemId");

                    b.HasIndex("StudentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("ScheduleHelper.Models.DbModels.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("Places");
                });

            modelBuilder.Entity("ScheduleHelper.Models.DbModels.ScheduleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("DayOfWeek");

                    b.Property<int>("Duration");

                    b.Property<DateTime>("EndDate");

                    b.Property<Guid?>("LanguageId");

                    b.Property<Guid?>("PlaceId");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("StartTime")
                        .IsRequired();

                    b.Property<Guid?>("TeacherId");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ScheduleItems");
                });

            modelBuilder.Entity("ScheduleHelper.Models.DbModels.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ScheduleHelper.Models.DbModels.StudentScheduleItem", b =>
                {
                    b.Property<Guid>("StudentId");

                    b.Property<Guid>("ScheduleItemId");

                    b.HasKey("StudentId", "ScheduleItemId");

                    b.HasIndex("ScheduleItemId");

                    b.ToTable("StudentScheduleItems");
                });

            modelBuilder.Entity("ScheduleHelper.Models.DbModels.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("ScheduleHelper.Models.DbModels.History", b =>
                {
                    b.HasOne("ScheduleHelper.Models.DbModels.ScheduleItem", "ScheduleItem")
                        .WithMany()
                        .HasForeignKey("ScheduleItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ScheduleHelper.Models.DbModels.Student", "Student")
                        .WithMany("Histories")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ScheduleHelper.Models.DbModels.Payment", b =>
                {
                    b.HasOne("ScheduleHelper.Models.DbModels.ScheduleItem", "ScheduleItem")
                        .WithMany()
                        .HasForeignKey("ScheduleItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ScheduleHelper.Models.DbModels.Student", "Student")
                        .WithMany("Payments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ScheduleHelper.Models.DbModels.ScheduleItem", b =>
                {
                    b.HasOne("ScheduleHelper.Models.DbModels.Language", "Language")
                        .WithMany("ScheduleItems")
                        .HasForeignKey("LanguageId");

                    b.HasOne("ScheduleHelper.Models.DbModels.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId");

                    b.HasOne("ScheduleHelper.Models.DbModels.Teacher", "Teacher")
                        .WithMany("ScheduleItems")
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("ScheduleHelper.Models.DbModels.StudentScheduleItem", b =>
                {
                    b.HasOne("ScheduleHelper.Models.DbModels.ScheduleItem", "ScheduleItem")
                        .WithMany("Students")
                        .HasForeignKey("ScheduleItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ScheduleHelper.Models.DbModels.Student", "Student")
                        .WithMany("ScheduleItems")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
